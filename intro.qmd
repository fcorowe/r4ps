# Overview

The module provides students with an introduction to the use of data science and digital footprint data to analyse human population dynamics. Established approaches to study population dynamics rely on traditional data sources, such as censuses and surveys. Digital footprint data have emerged as a novel source of information providing an opportunity to understand key societal population issues at an unprecedented temporal and spatial granularity at scale [@rowe2021b]. Yet, these data represent major methodological challenges to traditional demographic approaches [@rowe2021b]. Machine learning, artificial intelligence and data science approaches are needed to overcome these methodological challenges.

## Aims

This module aims to:

-   provide an introduction to fundamental theories of population science;

-   introduce students to novel data and approaches to understanding population dynamics and societal change; and,

-   equip students with skills and experience to conduct population science using computational, data science approaches.

## Learning Outcomes

By the end of the module, students should be able to:

-   gain an appreciation of relevant demographic theory to help interpret patterns of popu- lation change;

-   develop an understanding of the types of demographic and social science methods that are essential for interpreting and analysing digital footprint data in the context of population dynamics;

-   develop the ability to apply different methods to understand population dynamics and societal change;

-   gain an appreciation of how population science approaches can produce relevant evidence to inform policy debates;

-   develop critical awareness of modern demographic analysis and ethical considerations in the use of digital footprint data.

## Feedback

*Formal assessment of two computational essays*. Written assignment-specific feedback will be provided within three working weeks of the submission deadline. Comments will offer an understanding of the mark awarded and identify areas which can be considered for improvement in future assignments.

*Verbal face-to-face feedback*. Immediate face-to-face feedback will be provided during computer, discussion and clinic sessions in interaction with staff. This will take place in all live sessions during the semester.

*Online forum*. Asynchronous written feedback will be provided via an online forum. Students are encouraged to contribute by asking and answering questions relating to the module content. Staff will monitor the forum Monday to Friday 9am-5pm, but it will be open to students to make contributions at all times. Response time will vary depending on the complexity of the question and staff availability.

## Computational Environment

To reproduce the code in the book, you need the following software packages:

-   R-4.2.2
-   RStudio 2022.12.0-353
-   Quarto 1.2.280
-   the list of libraries in the next section

To check your version of:

-   R and libraries run `sessionInfo()`
-   RStudio click `help` on the menu bar and then `About`
-   Quarto check the `version` file in the quarto folder on your computer.

To install and update:

-   R, download the appropriate version from [The Comprehensive R Archive Network (CRAN)](https://cran.r-project.org)
-   RStudio, download the appropriate version from [Posit](https://posit.co/download/rstudio-desktop/)
-   Quarto, download the appropriate version from [the Quarto website](https://quarto.org/docs/get-started/)

### List of libraries

The list of libraries used in this book is provided below:

* `tidyverse`
* `viridis`
* `viridisLite`
* `ggthemes`
* `patchwork`
* `showtext`
* `RColorBrewer`
* `lubridate`
* `tmap`
* `sjPlot`
* `sf`
* `sp`
* `kableExtra`

You need to ensure you have installed the list of libraries used in this book, running the following code:

> list.of.packages.cran <- c(
"tidyverse",
"viridis",
"viridisLite",
"ggthemes",
"patchwork",
"showtext",
"RColorBrewer",
"lubridate",
"tmap",
"sjPlot",
"sf",
"sp",
"kableExtra")

> new.packages.cran <- list.of.packages.cran[!(list.of.packages.cran %in% installed.packages()[,"Package"])]
if(length(new.packages.cran)) install.packages(new.packages.cran)

> for(i in 1:length(list.of.packages.cran)) {
  library(list.of.packages.cran[i], character.only = T)
}


